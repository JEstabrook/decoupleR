% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/decoupleR-decouple.R
\name{decouple}
\alias{decouple}
\title{Evaluate multiple statistics with same input data}
\usage{
decouple(
  mat,
  network,
  .source,
  .target,
  statistics,
  args = list(NULL),
  include_time = FALSE,
  show_toy_call = FALSE
)
}
\arguments{
\item{mat}{Matrix to evaluate (e.g. expression matrix).
Target nodes in rows and conditions in columns.
\code{rownames(mat)} must have at least one intersection with the elements
in \code{network} \code{.target} column.}

\item{network}{Tibble or dataframe with edges and it's associated metadata.}

\item{.source}{Column with source nodes.}

\item{.target}{Column with target nodes.}

\item{statistics}{Statistical methods to be coupled.}

\item{args}{A list of argument-lists the same length as \code{statistics}
(or length 1). The default argument, list(NULL), will be recycled to the
same length as \code{statistics}, and will call each function with no arguments
(apart from \code{mat}, \code{network}, \code{.source} and, \code{.target}).}

\item{include_time}{Should the time per statistic evaluated be informed?}

\item{show_toy_call}{The call of each statistic must be informed?}
}
\value{
A long format tibble of the enrichment scores for each tf
across the samples. Resulting tibble contains the following columns:
\enumerate{
\item \code{statistic}: Indicates which method is associated with which score.
\item \code{tf}: Source nodes of \code{network}.
\item \code{condition}: Condition representing each column of \code{mat}.
\item \code{score}: Regulatory activity (enrichment score).
\item \code{statistic_time}: If requested, internal execution time indicator.
\item \code{...}: Columns of metadata generated by certain statistics.
}
}
\description{
Calculate the TF activity per sample out of a gene expression matrix by
coupling a regulon network with a variety of statistics.
}
\examples{
if (FALSE) {
    inputs_dir <- system.file("testdata", "inputs", package = "decoupleR")

    mat <- readRDS(file.path(inputs_dir, "input-expr_matrix.rds"))
    network <- readRDS(file.path(inputs_dir, "input-dorothea_genesets.rds"))

    decouple(
        mat = mat,
        network = network,
        .source = "tf",
        .target = "target",
        statistics = c("gsva", "mean", "pscira", "scira", "viper"),
        args = list(
            gsva = list(verbose = FALSE),
            mean = list(.mor = "mor", .likelihood = "likelihood"),
            pscira = list(.mor = "mor"),
            scira = list(.mor = "mor"),
            viper = list(
                .mor = "mor",
                .likelihood = "likelihood",
                verbose = FALSE
            )
        )
    )
}
}
\seealso{
Other decoupleR statistics: 
\code{\link{run_gsva}()},
\code{\link{run_mean}()},
\code{\link{run_ora}()},
\code{\link{run_pscira}()},
\code{\link{run_scira}()},
\code{\link{run_viper}()}
}
\concept{decoupleR statistics}
