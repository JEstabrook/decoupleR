% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils-dataset-converters.R
\name{transmute_defaults}
\alias{transmute_defaults}
\title{Transmute add column with defaults}
\usage{
transmute_defaults(.data, ..., .def_col_val = c())
}
\arguments{
\item{.data}{A data frame, data frame extension (e.g. a tibble), or a
lazy data frame (e.g. from dbplyr or dtplyr). See \emph{Methods}, below, for
more details.}

\item{...}{<\code{\link[dplyr:dplyr_data_masking]{data-masking}}> Name-value pairs.
The name gives the name of the column in the output.

The value can be:
\itemize{
\item A vector of length 1, which will be recycled to the correct length.
\item A vector the same length as the current group (or the whole data frame
if ungrouped).
\item \code{NULL}, to remove the column.
\item A data frame or tibble, to create multiple columns in the output.
}}

\item{.def_col_val}{Named vector with columns with default values
if none exist after transmute.}
}
\value{
An object of the same type as \code{.data}. The output has the following
properties:
\itemize{
\item Rows are not affected.
\item Existing columns will be preserved according to the \code{.keep} argument.
New columns will be placed according to the \code{.before} and \code{.after}
arguments. If \code{.keep = "none"} (as in \code{transmute()}), the output order
is determined only by \code{...}, not the order of existing columns.
\item Columns given value \code{NULL} will be removed
\item Groups will be recomputed if a grouping variable is mutated.
\item Data frame attributes are preserved.
}
}
\description{
\code{transmute_defaults} combine the \code{\link[dplyr]{transmute}} way of
working and combine it with the \code{\link[tibble]{add_column}} to add columns
with default values in case they don't exist after transmuting the dataset.
}
\details{
\code{transmute} adds new variables and drops existing ones.
New variables overwrite existing variables of the same name.
Variables can be removed by setting their value to NULL.
}
\keyword{internal}
